% Obtém o modelo GMM para cada emoção.
% K = Número de centros (gaussianas) para o GMM.
% ext = Tipo de extrator a ser usado ('mfcc', 'f0', etc.).
% rnn = VAD com rede neural (0 ou 1).
% [p0,c,S,L] = Parâmetros do GMM (para cada emoção).

function [p0,C,cov,L] = get_emo_gmm(K,ext,rnn)

folder = 'C:\Users\victo\Documents\Dataset _ EmoDB2';
cd(folder);

if strcmp(ext, 'f0')
    load('emo_full_treino.mat');
    
elseif strcmp(ext, 'mfcc')
    load('emo_mfcc_treino.mat');
end

% Inicalização dos parâmetros do GMM (para cada emoção).

C = [];
cov = [];
p0 = [];
L = [];

% Emoções a serem procuradas.
emos = ['T';'W';'F';'N'];
% emos = 'T';

% Laço for para cada emoção.
for k = 1:length(emos)
    
    % Extrai as características para cada emoção.
    % emoção, vad-rnn (1 ou 0), extrator ('mfcc', 'f0', ...).
    % y = get_emo_feats(emos(k),rnn,ext,'treino');
    if strcmp(ext, 'f0')
        y = emo_full_treino{k};
    elseif strcmp(ext, 'mfcc')
    
    
    y = y(13:16,:);
    
    % Determina os parâmetros do GMM para uma emoção.
    [p0n,cn,Sn,Ln] = gmm_em_2(y', K, 10, 0);
    
    % Agrupa os parâmetros do GMM, cada emoção em uma dimensão diferente.
    p0 = cat(1,p0,p0n');
    L = cat(1,L,Ln);
    C = cat(3,C,cn);
    cov = cat(3,cov,Sn);
    
    % emo_full_treino{k} = y;
end
